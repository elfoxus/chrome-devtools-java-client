package com.github.kklisura.cdt.protocol.types.network;

import com.github.kklisura.cdt.protocol.support.annotations.Experimental;
import java.util.Map;

/** An object representing a report generated by the Reporting API. */
@Experimental
public class ReportingApiReport {

  private String id;

  private String initiatorUrl;

  private String destination;

  private String type;

  private Double timestamp;

  private Integer depth;

  private Integer completedAttempts;

  private Map<String, Object> body;

  private ReportStatus status;

  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  /** The URL of the document that triggered the report. */
  public String getInitiatorUrl() {
    return initiatorUrl;
  }

  /** The URL of the document that triggered the report. */
  public void setInitiatorUrl(String initiatorUrl) {
    this.initiatorUrl = initiatorUrl;
  }

  /** The name of the endpoint group that should be used to deliver the report. */
  public String getDestination() {
    return destination;
  }

  /** The name of the endpoint group that should be used to deliver the report. */
  public void setDestination(String destination) {
    this.destination = destination;
  }

  /** The type of the report (specifies the set of data that is contained in the report body). */
  public String getType() {
    return type;
  }

  /** The type of the report (specifies the set of data that is contained in the report body). */
  public void setType(String type) {
    this.type = type;
  }

  /** When the report was generated. */
  public Double getTimestamp() {
    return timestamp;
  }

  /** When the report was generated. */
  public void setTimestamp(Double timestamp) {
    this.timestamp = timestamp;
  }

  /** How many uploads deep the related request was. */
  public Integer getDepth() {
    return depth;
  }

  /** How many uploads deep the related request was. */
  public void setDepth(Integer depth) {
    this.depth = depth;
  }

  /** The number of delivery attempts made so far, not including an active attempt. */
  public Integer getCompletedAttempts() {
    return completedAttempts;
  }

  /** The number of delivery attempts made so far, not including an active attempt. */
  public void setCompletedAttempts(Integer completedAttempts) {
    this.completedAttempts = completedAttempts;
  }

  public Map<String, Object> getBody() {
    return body;
  }

  public void setBody(Map<String, Object> body) {
    this.body = body;
  }

  public ReportStatus getStatus() {
    return status;
  }

  public void setStatus(ReportStatus status) {
    this.status = status;
  }
}
